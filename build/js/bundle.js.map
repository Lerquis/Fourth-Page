{"version":3,"sources":["app.js","galeria.js"],"names":["navegacionFija","barra","document","querySelector","IntersectionObserver","entries","isIntersecting","classList","remove","add","observe","scrollNav","querySelectorAll","forEach","enlace","addEventListener","e","preventDefault","target","attributes","href","value","scrollIntoView","behavior","crearGaleria","galeria","i","imagen","createElement","src","dataset","imagenId","onclick","mostrarImagen","lista","appendChild","id","parseInt","body","overlay","cerrarImagen","textContent"],"mappings":"AAKA,SAAAA,iBACA,MAAAC,EAAAC,SAAAC,cAAA,WAEA,IAAAC,sBAAA,SAAAC,GACAA,EAAA,GAAAC,eAEAL,EAAAM,UAAAC,OAAA,QAEAP,EAAAM,UAAAE,IAAA,WAKAC,QAAAR,SAAAC,cAAA,UAGA,SAAAQ,YACAT,SAAAU,iBAAA,2BACAC,SAAA,SAAAC,GAGAA,EAAAC,iBAAA,SAAA,SAAAC,GAEAA,EAAAC,iBACAf,SAAAC,cAAAa,EAAAE,OAAAC,WAAAC,KAAAC,OACAC,eAAA,CAAAC,SAAA,iBC1BA,SAAAC,eACA,MAAAC,EAAAvB,SAAAC,cAAA,qBAEA,IAAA,IAAAuB,EAAA,EAAAA,GAAA,GAAAA,IAAA,CACA,MAAAC,EAAAzB,SAAA0B,cAAA,OACAD,EAAAE,IAAA,mBAAAH,SACAC,EAAAG,QAAAC,SAAAL,EAGAC,EAAAK,QAAAC,cAEA,MAAAC,EAAAhC,SAAA0B,cAAA,MACAM,EAAAC,YAAAR,GACAF,EAAAU,YAAAD,IAIA,SAAAD,cAAAjB,GAMA,MAAAoB,EAAAC,SAAArB,EAAAE,OAAAY,QAAAC,UAEAJ,EAAAzB,SAAA0B,cAAA,OACAD,EAAAE,IAAA,oBAAAO,SACA,MAAAE,EAAApC,SAAAC,cAAA,QACAoC,EAAArC,SAAA0B,cAAA,OACAW,EAAAJ,YAAAR,GACAY,EAAAhC,UAAAE,IAAA,WAGA8B,EAAAP,QAAA,WACAO,EAAA/B,SACA8B,EAAA/B,UAAAC,OAAA,eAGA,MAAAgC,EAAAtC,SAAA0B,cAAA,KACAY,EAAAC,YAAA,IACAD,EAAAjC,UAAAE,IAAA,cAEA+B,EAAAR,QAAA,WACAO,EAAA/B,SACA8B,EAAA/B,UAAAC,OAAA,eAEA+B,EAAAJ,YAAAK,GAEAF,EAAAH,YAAAI,GACAD,EAAA/B,UAAAE,IAAA,cDrDAP,SAAAa,iBAAA,oBAAA,WACAJ,YACAX,oBCFAE,SAAAa,iBAAA,oBAAA,WACAS","file":"bundle.js","sourcesContent":["document.addEventListener(\"DOMContentLoaded\", function () {\r\n  scrollNav();\r\n  navegacionFija();\r\n});\r\n\r\nfunction navegacionFija() {\r\n  const barra = document.querySelector(\".header\");\r\n  //Registrar el Intersection Observer\r\n  const observer = new IntersectionObserver(function (entries) {\r\n    if (entries[0].isIntersecting) {\r\n      //Agarra la info del observer y el .isIntersecting se refiere a si es visible en el monitor\r\n      barra.classList.remove(\"fijo\"); //Para quitar el header de la pantalla\r\n    } else {\r\n      barra.classList.add(\"fijo\"); //Para dejar el header fijo en la pantalla\r\n    }\r\n  });\r\n\r\n  //Elemento observar\r\n  observer.observe(document.querySelector(\".info\")); //Observa y toma como refencia la clase info. De si esta se ve o no\r\n}\r\n\r\nfunction scrollNav() {\r\n  const enlaces = document.querySelectorAll(\".navegacion-principal a\"); // querySelectorAll porque son 3 enlaces en este caso\r\n  enlaces.forEach(function (enlace) {\r\n    //Itera por los enlaces\r\n    //Esto se hacer porque un addEventListener no puede estar atado a varios elementos, tiene que ser uno por uno. Por eso se itera la lista de enalces\r\n    enlace.addEventListener(\"click\", function (e) {\r\n      //console.log(e.target.attributes.href.value); Muestra el value del href del elemento\r\n      e.preventDefault(); //Previene que se realice la accion default del boton (Bajar de golpe)\r\n      const seccion = document.querySelector(e.target.attributes.href.value); //Seccion = al id del enlace\r\n      seccion.scrollIntoView({ behavior: \"smooth\" }); // Para anadir la animacion del scroll\r\n    });\r\n  });\r\n}\r\n","document.addEventListener(\"DOMContentLoaded\", function () {\r\n  crearGaleria();\r\n});\r\n\r\nfunction crearGaleria() {\r\n  const galeria = document.querySelector(\".galeria-imagenes\"); //Selecciona el elemento \"galeria-imagenes\" del html\r\n\r\n  for (let i = 1; i <= 12; i++) {\r\n    const imagen = document.createElement(\"IMG\"); //Crea un elemento img\r\n    imagen.src = `build/img/thumb/${i}.webp`; //Obtiene la ruta de la imagen. Se hace con ` ` para poder utilizar variables mediante el ${}\r\n    imagen.dataset.imagenId = i; //Le agrega el numero i como Id a la imagen\r\n\r\n    //Se agrega la funcion de mostarImagen\r\n    imagen.onclick = mostrarImagen;\r\n\r\n    const lista = document.createElement(\"LI\"); //Crea elemento lista\r\n    lista.appendChild(imagen); //Se agregan las imagenes a la lista\r\n    galeria.appendChild(lista); //Se muestra en el codigo html\r\n  }\r\n}\r\n\r\nfunction mostrarImagen(e) {\r\n  //e de parametro = Evento\r\n  //e.target = el evento es el click y el target es la imagen. Entonces devuelve los datos de la imagen que se le dio click\r\n  //e.target.dataset = devuelve el Id que se agrego antes\r\n  //e.target.dataset.imagenId = devuelve solamente el numero\r\n  //console.log(e.target.dataset.imagenId);\r\n  const id = parseInt(e.target.dataset.imagenId); //Pasar la string de Id a numero\r\n  //Genera la imagen\r\n  const imagen = document.createElement(\"IMG\");\r\n  imagen.src = `build/img/grande/${id}.webp`;\r\n  const body = document.querySelector(\"body\");\r\n  const overlay = document.createElement(\"DIV\");\r\n  overlay.appendChild(imagen);\r\n  overlay.classList.add(\"overlay\"); //Agrega una clase \"overlay\" al div\r\n\r\n  //Cuando se da click afuera de la imagen\r\n  overlay.onclick = function () {\r\n    overlay.remove();\r\n    body.classList.remove(\"fijar-body\"); // Para quitar el efecto de que no deje dar scroll\r\n  };\r\n  //Boton para cerrar la imagen\r\n  const cerrarImagen = document.createElement(\"P\");\r\n  cerrarImagen.textContent = \"X\";\r\n  cerrarImagen.classList.add(\"btn-cerrar\");\r\n  //Cuando se presiona, se cierra la imagen\r\n  cerrarImagen.onclick = function () {\r\n    overlay.remove();\r\n    body.classList.remove(\"fijar-body\"); // Para quitar el efecto de que no deje dar scroll\r\n  };\r\n  overlay.appendChild(cerrarImagen);\r\n  //Mostar en el html\r\n  body.appendChild(overlay);\r\n  body.classList.add(\"fijar-body\");\r\n}\r\n"]}